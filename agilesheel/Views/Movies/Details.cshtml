@using agilesheel.Models
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using agilesheel.Constants
@using agilesheel.Helpers
@model agilesheel.ViewModels.MovieViewModel

@{
    ViewData["Title"] = Html.DisplayFor(model => model.Movie.Title);
}

<div class="container">

    <div class="row align-items-md-center">
        <h1 class="col-10 float-left">@Html.DisplayFor(model => model.Movie.Title)</h1>

        @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Movies.Edit)).Result.Succeeded)
        {
            <div class="col-2 float-left">
                <a asp-action="Edit" asp-route-id="@Model.Movie.Id" class="btn btn-success float-right">Edit</a>
            </div>
        }
    </div>

    <hr />
    <div class="row mb-5">
        <div class="col-6">
            <dl class="row">
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.Length)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.Length)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.Synopsis)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.Synopsis)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.Year)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.Year)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.Genre)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.Genre)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.ParentalRating)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.ParentalRating)
                </dd>
                <dt class="col-sm-3">
                    @Html.DisplayNameFor(model => model.Movie.Is3D)
                </dt>
                <dd class="col-sm-9">
                    @Html.DisplayFor(model => model.Movie.Is3D)
                </dd>
            </dl>
        </div>
        <div class="col-4 col-lg-3 col-xl-2 offset-1">
            <div class="movie-item">
                <img src="@Html.DisplayFor(modelItem => Model.Movie.PosterUrl)" alt="@Html.DisplayFor(modelItem => Model.Movie.Title)" height="300" />
            </div>
        </div>
    </div>

    <div class="row mb-5">
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Theater
                    </th>
                    <th>
                        Starts at
                    </th>
                    <th>
                        Show Duration
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Shows)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Theater.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartTime)
                        </td>
                        <td>
                            @Model.Movie.Length Minutes
                        </td>
                        <td>
                            <a class="btn btn-success" asp-controller="Tickets"
                               asp-action="Create" asp-route-id="@item.Id">Order</a>
                        </td>
                    </tr>
                 }
            </tbody>
        </table>
    </div>
        
    <div class="row">
        @if (Model.Reviews != null) { 
            <h2 class="col-12">Reviews</h2>
                @foreach (var review in Model.Reviews) 
                {
                    <div class="col-4 float-left mb-3">
                        <div class="card">
                            <div class="card-header">
                                @Html.DisplayFor(modelItem => review.Name)
                            </div>
                            <div class="card-body">
                                <blockquote class="blockquote mb-0">
                                    <p class="card-text">@Html.DisplayFor(modelItem => review.Description)</p>
                                    <footer class="blockquote-footer">@Html.DisplayFor(modelItem => review.User.UserName)</footer>
                                </blockquote>
                            </div>
                        </div>
                    </div>
                }
            }

        @if (User.Identity.IsAuthenticated) {
            <div class="mb-5 col-12">
                <h4>Add a review yourself</h4>
                <form asp-action="AddReview" method="post">
                    <input type="hidden" asp-for="Review.UserId" value="@User.GetUserId()" />
                    <input type="hidden" asp-for="Review.MovieId" value="@Model.Movie.Id" />

                    <div class="form-group">
                        <label asp-for="Review.Name" class="control-label"></label>
                        <input asp-for="Review.Name" class="form-control">
                    </div>

                    <div class="form-group">
                        <label asp-for="Review.Description" class="control-label"></label>
                        <textarea asp-for="Review.Description" class="form-control"></textarea>
                    </div>

                    <input type="submit" value="Add Review" class="btn btn-success" />
                </form>
            </div>
            }
    </div>
    
    <a class="btn btn-info" asp-action="Index">Back to List</a>
</div>
