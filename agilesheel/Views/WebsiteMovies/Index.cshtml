@using agilesheel.Models
@model agilesheel.ViewModels.MovieViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using agilesheel.Constants

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <h1>Movies this week</h1>
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Movies.Create)).Result.Succeeded)
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    <div class="row">
        @foreach (var item in Model.Movies)
        {
            <div class="col-3">
                <a class="movie-item" asp-action="Details" asp-route-id="@item.Id">
                    <img src="@Html.DisplayFor(modelItem => item.PosterUrl)" alt="@Html.DisplayFor(modelItem => item.Title)" height="300" />
                    <h1 class="h6">@Html.DisplayFor(modelItem => item.Title)</h1>
                    <span>@Html.DisplayFor(modelItem => item.Genre)</span>
                    <span>Pegi: @Html.DisplayFor(modelItem => item.ParentalRating)</span>

                    @if (item.Is3D)
                    {
                        <span>3D</span>
                    }
                </a>
            </div>
        }
    </div>
</div>